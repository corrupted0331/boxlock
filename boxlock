do local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=math.ldexp;local v9=getfenv or function()return _ENV;end ;local v10=setmetatable;local v11=pcall;local v12=select;local v13=unpack or table.unpack ;local v14=tonumber;local function v15(v16,v17,...)local v18=1;local v19;v16=v4(v3(v16,5),"..",function(v30)if (v1(v30,2)==79) then local v66=0;while true do if (0==v66) then v19=v0(v3(v30,1,1));return "";end end else local v67=v2(v0(v30,16));if v19 then local v77=v5(v67,v19);v19=nil;return v77;else return v67;end end end);local function v20(v31,v32,v33)if v33 then local v68=(v31/((1 + 1 + 0)^(v32-(1 + 0))))%((6 -(2 + 2))^(((v33-(1 + 0)) -(v32-(2 -1))) + 1)) ;return v68-(v68%(1656 -((2098 -(1383 + 166)) + 1106))) ;else local v69=0 + 0 + 0 ;local v70;while true do if ((1867 -(1187 + 680))==v69) then v70=(2 + 0)^(v32-(1568 -(130 + 1437))) ;return (((v31%(v70 + v70))>=v70) and 1) or (0 + 0) ;end end end end local function v21()local v38=v1(v16,v18,v18);v18=v18 + 1 ;return v38;end local function v22()local v39,v40=v1(v16,v18,v18 + (1437 -(947 + 488)) );v18=v18 + (5 -3) ;return (v40 * 256) + v39 ;end local function v23()local v41,v42,v43,v44=v1(v16,v18,v18 + 2 + 1 );v18=v18 + 3 + 1 ;return (v44 * (65010871 -48233655)) + (v43 * (35862 + 29674)) + (v42 * (1307 -(664 + (1650 -1263)))) + v41 ;end local function v24()local v45=v23();local v46=v23();local v47=2 -1 ;local v48=(v20(v46,(1446 -(84 + 130)) -(930 + 301) ,(1030 -(745 + 156)) -(24 + 85) ) * ((1322 -(607 + 713))^(831 -(789 + 10)))) + v45 ;local v49=v20(v46,516 -(157 + 338) ,318 -(191 + 96) );local v50=((v20(v46,31 + 1 )==(1 + 0 + 0)) and  -(2 -1)) or (2 -(1 + 0)) ;if (v49==0) then if (v48==(0 -0)) then return v50 * 0 ;else v49=1 + 0 ;v47=0 + 0 ;end elseif (v49==(3276 -(733 + 496))) then return ((v48==((3009 -1691) -(1279 + 39))) and (v50 * ((881 -((1920 -(1081 + 97)) + (414 -276)))/0))) or (v50 * NaN) ;end return v8(v50,v49-1023 ) * (v47 + (v48/((1 + 1)^(36 + 16)))) ;end local function v25(v34)local v51=488 -(282 + 206) ;local v52;local v53;while true do if (v51==(3 -0)) then return v6(v53);end if (v51==(3 -2)) then v52=v3(v16,v18,(v18 + v34) -(536 -(345 + 190)) );v18=v18 + v34 ;v51=730 -(482 + (876 -(217 + 413))) ;end if (v51==0) then v52=nil;if  not v34 then v34=v23();if (v34==(451 -(126 + 325))) then return "";end end v51=2 -1 ;end if (v51==(2 + 0)) then v53={};for v78=1 + (1988 -(631 + 1357)) , #v52 do v53[v78]=v2(v1(v3(v52,v78,v78)));end v51=6 -(2 + 1) ;end end end local v26=v23;local function v27(...)return {...},v12("#",...);end local function v28()local v54=0;local v55;local v56;local v57;local v58;local v59;local v60;local v61;local v62;while true do if (v54==4) then while true do if (v55==1) then local v80=0;while true do if (v80~=0) then else local v100=0 + 0 ;while true do if (v100==(1088 -(314 + 774))) then v58=nil;v59=nil;v100=1 + 0 ;end if (v100==1) then v80=1;break;end end end if (v80==(4 -3)) then v55=2 + 0 ;break;end end end if (v55==(9 -6)) then v62=nil;while true do local v84=0;local v85;while true do if (v84==(1183 -(795 + 388))) then v85=0;while true do if (1==v85) then if (v56==2) then local v108=0;local v109;local v110;while true do if ((0 + 0)~=v108) then else v109=0;v110=nil;v108=1 + 0 ;end if ((1 + 0)~=v108) then else while true do if (v109==0) then v110=0;while true do if (v110==1) then for v147=4 -3 ,v23() do local v148=0 -0 ;local v149;local v150;while true do if (v148~=(847 -(8 + 839))) then else local v241=0 + 0 ;while true do if (v241==1) then v148=1;break;end if (v241==(0 -0)) then v149=0;v150=nil;v241=961 -(48 + 912) ;end end end if (v148~=(2 -1)) then else while true do if (v149~=(378 -(256 + 122))) then else v150=v21();if (v20(v150,1,1)~=0) then else local v307=0;local v308;local v309;local v310;local v311;while true do if (v307~=1) then else v310=nil;v311=nil;v307=2 -0 ;end if (v307==0) then v308=0 -0 ;v309=nil;v307=143 -(14 + 128) ;end if (v307~=(7 -5)) then else while true do if (v308==0) then local v362=0;local v363;while true do if (v362==(0 -0)) then v363=0;while true do if (v363~=1) then else v308=1;break;end if (v363~=0) then else local v398=0;while true do if (v398==(1662 -(1224 + 437))) then v363=1;break;end if (v398~=0) then else v309=v20(v150,7 -5 ,1 + 2 );v310=v20(v150,102 -(51 + 47) ,348 -(250 + 92) );v398=1 -0 ;end end end end break;end end end if (v308==2) then local v364=0 + 0 ;while true do if (0==v364) then if (v20(v310,1,414 -(409 + 4) )~=(1 + 0)) then else v311[3 -1 ]=v62[v311[2]];end if (v20(v310,2,2)~=(1 + 0)) then else v311[4 -1 ]=v62[v311[3]];end v364=1;end if (v364==(1 -0)) then v308=3;break;end end end if ((532 -(66 + 465))~=v308) then else v311={v22(),v22(),nil,nil};if (v309==0) then local v373=0 -0 ;local v374;local v375;while true do if ((387 -(212 + 175))==v373) then v374=1209 -(18 + 1191) ;v375=nil;v373=937 -(428 + 508) ;end if (1~=v373) then else while true do if (v374==(0 -0)) then v375=0 -0 ;while true do if (v375==0) then v311[11 -8 ]=v22();v311[179 -(151 + 24) ]=v22();break;end end break;end end break;end end elseif (v309==(1 + 0)) then v311[4 -1 ]=v23();elseif (v309==2) then v311[3]=v23() -(2^16) ;elseif (v309==3) then local v400=0;local v401;local v402;while true do if (v400==1) then while true do if (v401==(0 -0)) then v402=0;while true do if (v402==0) then v311[3 + 0 ]=v23() -((771 -(394 + 375))^(42 -26)) ;v311[4]=v22();break;end end break;end end break;end if (v400~=(0 -0)) then else v401=0;v402=nil;v400=2 -1 ;end end end v308=2;end if (v308==(1955 -(1612 + 340))) then if (v20(v310,3,1818 -(560 + 1255) )~=1) then else v311[4 + 0 ]=v62[v311[4]];end v57[v147]=v311;break;end end break;end end end break;end end break;end end end v56=3;break;end if (v110==(103 -(77 + 26))) then local v121=0 + 0 ;local v122;while true do if (v121==(863 -(592 + 271))) then v122=0 -0 ;while true do if (v122==0) then for v270=1,v61 do local v271=1847 -(1228 + 619) ;local v272;local v273;local v274;while true do if (v271==1) then v274=nil;while true do if (v272~=(883 -(128 + 755))) then else local v352=0 + 0 ;while true do if (v352==(1869 -(970 + 898))) then v272=1;break;end if (v352==0) then v273=v21();v274=nil;v352=1;end end end if (v272~=1) then else if (v273==1) then v274=v21()~=0 ;elseif (v273==(1 + 1)) then v274=v24();elseif (v273==(14 -11)) then v274=v25();end v62[v270]=v274;break;end end break;end if (0==v271) then v272=1602 -(637 + 965) ;v273=nil;v271=1;end end end v60[2 + 1 ]=v21();v122=1;end if (v122~=1) then else v110=558 -(7 + 550) ;break;end end break;end end end end break;end end break;end end end if (v56==(1 + 0)) then local v111=680 -(295 + 385) ;local v112;while true do if (v111~=(1192 -(984 + 208))) then else v112=0 -0 ;while true do if (1==v112) then v62={};v56=2;break;end if (v112~=0) then else local v119=0;while true do if (v119==0) then v60={v57,v58,nil,v59};v61=v23();v119=3 -2 ;end if (v119~=1) then else v112=1;break;end end end end break;end end end break;end if (v85~=0) then else local v106=0;while true do if (v106==(1 + 0)) then v85=1;break;end if (v106~=(0 + 0)) then else if (v56==(6 -3)) then local v115=0;local v116;while true do if (v115~=(0 + 0)) then else v116=0 + 0 ;while true do local v120=0 -0 ;while true do if (v120~=0) then else if (v116~=(0 + 0)) then else for v242=1,v23() do v58[v242-(1229 -(682 + 546)) ]=v28();end for v244=1,v23() do v59[v244]=v23();end v116=1 + 0 ;end if (v116==(21 -(13 + 7))) then return v60;end break;end end end break;end end end if (v56==(0 + 0)) then local v117=0;local v118;while true do if (v117~=(263 -(162 + 101))) then else v118=0 -0 ;while true do if (v118~=1) then else v59={};v56=3 -2 ;break;end if (v118==0) then local v123=0;while true do if (v123~=(0 + 0)) then else v57={};v58={};v123=1;end if (v123==1) then v118=1;break;end end end end break;end end end v106=1;end end end end break;end end end break;end if (2~=v55) then else local v81=0;local v82;while true do if (v81==0) then v82=0;while true do if (v82==1) then v55=3;break;end if (v82==(297 -(188 + 109))) then local v105=0;while true do if ((2 -1)==v105) then v82=1;break;end if (v105~=0) then else v60=nil;v61=nil;v105=1 + 0 ;end end end end break;end end end if (v55==(1022 -(617 + 405))) then local v83=0 + 0 ;while true do if (v83~=(0 -0)) then else v56=138 -(26 + 112) ;v57=nil;v83=1;end if (v83~=(1 + 0)) then else v55=3 -2 ;break;end end end end break;end if (v54~=(0 + 0)) then else v55=1056 -(888 + 168) ;v56=nil;v54=3 -2 ;end if (v54~=(9 -7)) then else v59=nil;v60=nil;v54=1 + 2 ;end if (v54~=3) then else v61=nil;v62=nil;v54=1 + 3 ;end if (v54~=(1 + 0)) then else v57=nil;v58=nil;v54=226 -(97 + 127) ;end end end local function v29(v35,v36,v37)local v63=v35[1];local v64=v35[2];local v65=v35[3];return function(...)local v71=0;local v72;local v73;local v74;local v75;local v76;while true do if (1==v71) then v74={...};v75=v12("#",...) -1 ;v71=2;end if (v71==3) then A,B=v27(v11(v76));if  not A[1] then local v86=v35[4][v72] or "?" ;error("Script error at ["   .. v86   .. "]:"   .. A[2] );else return v13(A,2,B);end break;end if (v71==0) then v72=1;v73= -1;v71=1;end if (v71==2) then v76=nil;function v76()local v87=v63;local v88=v64;local v89=v65;local v90=v27;local v91={};local v92={};local v93={};for v97=0 + 0 ,v75 do if (((2856 -1656)<(5014 -(1102 + 86))) and (v97>=v89)) then v91[v97-v89 ]=v74[v97 + 1 + 0 ];else v93[v97]=v74[v97 + (3 -(1 + 1)) ];end end local v94=(v75-v89) + (930 -(773 + 156)) ;local v95;local v96;while true do local v98=0 + 0 ;local v99;while true do if (((793 -405)<=(8599 -4226)) and (v98==(1257 -(206 + 1051)))) then v99=1216 -(861 + 355) ;while true do if (((4205 -(892 + 733))>324) and (0==v99)) then local v107=0;while true do if ((v107==(0 -0)) or ((3149 -1835)<=(3013 -(1172 + 278 + 278)))) then v95=v87[v72];v96=v95[1 + 0 ];v107=(8 -5) -2 ;end if ((v107==(1 + 0)) or ((1722 + 297)<(965 + 778))) then v99=1 + (958 -(916 + 42)) ;break;end end end if ((4684>2805) and (v99==1)) then if ((v96<=(24 + 0)) or (4276>=(6698 -1824))) then if ((v96<=(1 + 10)) or (1048>((1860 + 1020) -(280 + (1732 -1189))))) then if ((v96<=((808 -485) -(268 + 50))) or (1952>(8978 -(24798 -18224)))) then if ((v96<=(2 -0)) or ((12 + 19)>(3346 -(1267 + 130)))) then if ((v96<=(0 -0)) or ((688 -(120 + 228))>(4968 -3465))) then local v124=0 + 0 ;local v125;while true do if ((v124==0) or ((2555 -(1240 + (1179 -476)))==(155 -(24 + 65)))) then v125=v95[1532 -(603 + 927) ];v93[v125]=v93[v125](v93[v125 + 1 ]);break;end end elseif (((2252 + 337)<=(4107 -(141 + 251))) and (v96>(1809 -(977 + 831)))) then v93[v95[4 -2 ]][v95[3]]=v95[1734 -(1279 + 451) ];else v93[v95[2 -0 ]]();end elseif ((546<1244) and (v96<=(8 -5))) then local v126=50 -(28 + 22) ;local v127;while true do if (((9249 -6126)>=((3058 + 1677) -((2120 -1161) + 744))) and (v126==(399 -(190 + 209)))) then v127=v95[710 -(98 + 610) ];do return v93[v127](v13(v93,v127 + (1 -0) ,v73));end break;end end elseif ((v96>((293 + 1067) -(623 + 733))) or ((10910 -7761)<(1572 -538))) then v72=v95[1548 -(1498 + 47) ];else local v154=0 + 0 ;local v155;while true do if ((v154==(695 -((680 -(60 + 225)) + 300))) or ((3629 -((2170 -(58 + 1870)) + 686))<=563)) then v155=v95[2 + 0 ];v93[v155]=v93[v155]();break;end end end elseif ((v96<=((10 -6) + 4)) or (((4033 -(1957 + 36)) -(106 + 83))>(5447 -(404 + 880)))) then if ((v96<=((1821 -(688 + 1131)) + 4)) or (4038<3781)) then v93[v95[1089 -(938 + 149) ]]= #v93[v95[3]];elseif ((v96>(14 -7)) or ((6028 -(278 + 1610))==(4870 -(1200 + (763 -443))))) then v93[v95[1 + 1 ]]=v95[1679 -(212 + 1464) ]~=0 ;else local v157=0;local v158;local v159;local v160;local v161;local v162;while true do if ((v157==(2 + 0)) or ((362 + 1793)>(4002 -(629 + 503)))) then v162=nil;while true do if ((v158==(0 + 0)) or (((12460 -9245) + 1372)<326)) then local v286=1103 -(730 + 373) ;local v287;while true do if ((3333<=(2318 + 2603)) and (v286==(0 -0))) then v287=1873 -(1143 + 730) ;while true do if ((((566 + 584) -298)<(5705 -3151)) and ((991 -(989 + 2))==v287)) then v159=v95[2];v160,v161=v90(v93[v159](v93[v159 + (1383 -(906 + 476)) ]));v287=(94 -(56 + 37)) + 0 ;end if ((1924<=(7928 -5233)) and (v287==(1 + 0))) then v158=1408 -(543 + 864) ;break;end end break;end end end if ((v158==(1525 -(665 + 858))) or ((3559 -2269)<=(845 -(570 + 71)))) then for v312=v159,v73 do local v313=(1580 + 295) -(238 + 1637) ;while true do if ((4869>=(589 + 368)) and (v313==(131 -(126 + 5)))) then v162=v162 + (621 -(388 + 232)) ;v93[v312]=v160[v162];break;end end end break;end if (((4717 -(643 + 670))==(4868 -(1236 + 228))) and (v158==1)) then local v288=166 -(45 + 121) ;while true do if (((10973 -6726)<4814) and (v288==(1 -0))) then v158=(407 -(9 + 230)) -(125 + 41) ;break;end if (((3080 -(71 + 46))>=(120 + 2646)) and (v288==0)) then local v334=0 -0 ;while true do if ((0==v334) or ((4266 -(1024 + 966))>=(3892 -(368 + 527)))) then v73=(v161 + v159) -(1073 -(618 + 435 + 19)) ;v162=0;v334=397 -(319 + 77) ;end if ((v334==(221 -(134 + 86))) or (4634==((352 + 3164) -(238 + 11)))) then v288=2000 -(469 + 1530) ;break;end end end end end end break;end if ((((1742 -(1284 + 399)) + 476)==(1338 -803)) and (v157==(1306 -(458 + 847)))) then local v255=0 + 0 ;while true do if (((8726 -5735)<((6651 + 3611) -6688)) and (v255==(1004 -(36 + 968)))) then v160=nil;v161=nil;v255=1;end if ((v255==((67 -(41 + 25)) + 0)) or ((4898 -(109 + 95))==3080)) then v157=1653 -(1318 + 333) ;break;end end end if ((v157==(1399 -(965 + 434))) or ((10304 -(6448 -(643 + 45)))<(372 + 369))) then v158=0 + 0 ;v159=nil;v157=1;end end end elseif ((v96<=(23 -14)) or ((12906 -9920)>=(1071 + 3650))) then v93[v95[2]]=v93[v95[3]] -v93[v95[2 + 2 ]] ;elseif ((v96>10) or ((2002 + 1566)>=4312)) then local v163=0;local v164;local v165;local v166;while true do if ((4913>=(4028 -(669 + 261))) and (v163==(0 -0))) then v164=0;v165=nil;v163=1 + 0 ;end if ((4138>(556 + 2493)) and (v163==(3 -(1600 -(259 + 1339))))) then v166=nil;while true do if ((v164==(0 + 0)) or ((4 + 924)==(4209 + 358))) then v165=0 -0 ;v166=nil;v164=1 + (0 -0) ;end if (((5390 -(313 + 354))>=(12810 -9569)) and (v164==(2 -1))) then while true do if (((3178 + 897)==4075) and (v165==(977 -(891 + 86)))) then v166=v95[1942 -(1802 + 138) ];v93[v166]=v93[v166](v13(v93,v166 + 1 ,v95[3]));break;end end break;end end break;end end else local v167=109 -(83 + 26) ;local v168;local v169;local v170;while true do if ((((60 + 5304) -(244 + 343))<(4201 + 725)) and ((0 -0)==v167)) then v168=0;v169=nil;v167=1;end if ((3748==(2026 + 1059 + 663)) and (v167==(1789 -(1139 + 649)))) then v170=nil;while true do if (((294 + 335)<=(5992 -2973)) and (v168==(1151 -(1065 + 86)))) then v169=0 + (0 -0) ;v170=nil;v168=1;end if ((v168==(2 -1)) or ((1473 -415)>=2551)) then while true do if ((2254<=(3940 -(591 + 999))) and (v169==(0 + 0))) then v170=v95[884 -(220 + 662) ];do return v13(v93,v170,v73);end break;end end break;end end break;end end end elseif ((v96<=((558 -(86 + 128)) -(205 + 122))) or ((9284 -4709)<(5214 -(162 + 1671)))) then if (((5395 -(573 + (3666 -2610)))<=(1931 + (3020 -(26 + 11)))) and (v96<=(1324 -(433 + 877)))) then if (((4479 -(1387 + 61))<=4225) and (v96<=12)) then if ((v93[v95[1 + 1 ]]~=v93[v95[4]]) or (((913 -(144 + 585)) + 163)>=(12978 -(25169 -16617)))) then v72=v72 + 1 + 0 + 0 ;else v72=v95[7 -4 ];end elseif (((6383 -3807)>105) and (v96==(45 -32))) then if (((566 + 227)<((6256 -2754) -2385)) and (v93[v95[3 -1 ]]<=v93[v95[1410 -(798 + 608) ]])) then v72=v72 + (1422 -(73 + 1348)) ;else v72=v95[14 -(3 + 8) ];end else v37[v95[5 -2 ]]=v93[v95[1972 -(1796 + 174) ]];end elseif ((v96<=(777 -(332 + 430))) or ((3635 -(1368 + 199 + 42))>(2457 + 747))) then local v130=257 -(23 + 234) ;local v131;local v132;local v133;local v134;while true do if ((v130==(0 + 0)) or (2178<=(6667 -4960))) then local v233=0 -0 ;while true do if (((1205 -(969 + 236))==v233) or ((4517 -1468)>=(5814 -1618))) then v131=0 + 0 ;v132=nil;v233=1 + 0 ;end if ((v233==1) or ((1655 -(47 + 151))<((612 -(132 + 368)) + 784))) then v130=634 -(548 + 85) ;break;end end end if ((4626>(11176 -8001)) and (v130==(6 -4))) then while true do if (((3 -2)==v131) or (948==(4423 -3079))) then local v264=0;while true do if ((v264==(0 -0)) or ((2262 + 565)<=(3341 -(7520 -5760)))) then local v314=450 -(383 + 67) ;while true do if (((10395 -6325)>=((18108 -10203) -4995)) and (v314==(0 + 0))) then v134=v93[v132] + v133 ;v93[v132]=v134;v314=3 -2 ;end if ((v314==(1 + 0)) or (((11712 -5426) -(3137 -(494 + 578)))<(183 + 2363))) then v264=1 + 0 ;break;end end end if (((1 + 0)==v264) or ((5266 -(1126 + 738))<=1333)) then v131=(854 -(346 + 507)) + 1 ;break;end end end if (((543 + 2907)>=7) and (v131==(1252 -(917 + 333)))) then if ((4601>=(3397 -1793)) and (v133>(641 -(580 + 61)))) then if ((v134<=v93[v132 + 1 + 0 ]) or (619>(2805 + 1387))) then local v329=1853 -(154 + 1699) ;local v330;while true do if (((5111 -(288 + 670))>=(8303 -5735)) and (v329==(751 -(560 + 191)))) then v330=0 + 0 + 0 ;while true do if ((v330==(0 -0)) or ((1130 + 2700)<(458 + 292))) then v72=v95[7 -4 ];v93[v132 + 3 ]=v134;break;end end break;end end end elseif ((v134>=v93[v132 + (1160 -(524 + 635)) ]) or ((909 -194)>((2096 + 3990) -4755))) then local v331=0 + 0 ;local v332;local v333;while true do if ((v331==(541 -(249 + 292))) or ((12 + (236 -(38 + 72)))>866)) then v332=0;v333=nil;v331=1;end if (((10560 -5835)>=(4271 -(1085 -(207 + 80)))) and (v331==(3 -(633 -(479 + 152))))) then while true do if (((2541 + 2299)==(6677 -(1058 + 779))) and (v332==(560 -(436 + 124)))) then v333=0 -0 ;while true do if ((v333==0) or ((5971 -(672 + 1066))==1482)) then v72=v95[3];v93[v132 + (6 -3) ]=v134;break;end end break;end end break;end end end break;end if (((220 + (4837 -2552))<(5926 -(452 + 871))) and ((0 + 0)==v131)) then local v265=1617 -(703 + 914) ;local v266;while true do if (((213 + 4362)>=(5041 -(320 + 177))) and (v265==(0 + 0))) then v266=152 -((666 -(482 + 56)) + 24) ;while true do if (((2164 -(1366 + 52))<(17450 -13785)) and (v266==(0 + 0))) then v132=v95[1968 -(1502 + 464) ];v133=v93[v132 + (246 -(139 + 27 + 78)) ];v266=1909 -(273 + 1635) ;end if ((v266==(2 -(1 + 0))) or ((4528 + 111)<=(4742 -(687 + 316)))) then v131=1 + 0 ;break;end end break;end end end end break;end if ((v130==(1 + (0 -0))) or (((3420 -(50 + 1001)) -754)==(11215 -7747))) then local v234=0;while true do if (((1819 -(196 + 134))>1223) and (v234==(0 -0))) then v133=nil;v134=nil;v234=74 -(24 + 49) ;end if (((3631 + 1048)>=(1651 + 380)) and (v234==(1442 -(371 + 1070)))) then v130=2;break;end end end end elseif (((1713 -(696 + 15))<3659) and (v96>(16 + 0))) then local v174=0 + 0 ;local v175;local v176;local v177;while true do if ((2164==(3817 -(1473 + 180))) and (v174==(1241 -(149 + 1092)))) then v175=0 -0 ;v176=nil;v174=766 -(6 + 759) ;end if ((v174==1) or (467>(3055 -(37 + 101)))) then v177=nil;while true do if ((v175==(491 -(247 + 243))) or ((2454 -((1788 -1313) + 539))<=326)) then for v315=1, #v92 do local v316=0 + 0 + 0 ;local v317;local v318;local v319;while true do if ((v316==(996 -(638 + (1711 -(1099 + 255))))) or ((14743 -11776)<=(661 + 861))) then v319=nil;while true do if ((v317==(1 + 0)) or ((1274 -(474 + 147))<(504 -173))) then while true do if (((2237 + 2077)<=(5398 -(253 + 311))) and (v318==(0 -0))) then v319=v92[v315];for v387=0, #v319 do local v388=1614 -((1935 -(292 + 327)) + 298) ;local v389;local v390;local v391;local v392;while true do if ((v388==2) or ((6393 -2346)<(9431 -5510))) then while true do if ((3987>(1005 + 139)) and (v389==0)) then local v403=0;while true do if (((32 + 1621)<=(6567 -(493 + 1486))) and (v403==1)) then v389=1;break;end if (((607 -(40 + 106 + 140))<(3999 -(3223 -2030))) and (v403==0)) then v390=v319[v387];v391=v390[1900 -(1739 + 160) ];v403=1 + 0 ;end end end if ((v389==(1341 -(256 + 1084))) or ((6031 -(1370 + 457))<(3546 + 59))) then v392=v390[1112 -(1107 + 3) ];if (((v391==v93) and (v392>=v176)) or (3458<(400 -184))) then local v407=1560 -(180 + 1380) ;local v408;while true do if (((710 -(162 + 548))==v407) or ((4613 -(404 + 538))<(386 + 2244))) then v408=0 + 0 ;while true do if (((3042 -(55 + 32))>=(245 + 82)) and (v408==(1675 -(923 + 752)))) then v177[v392]=v391[v392];v390[1 -(0 + 0) ]=v177;break;end end break;end end end break;end end break;end if ((4100>(1300 + 285)) and (v388==0)) then v389=0 -0 ;v390=nil;v388=1 -0 ;end if ((1==v388) or (3321>(2626 + 1206))) then v391=nil;v392=nil;v388=2;end end end break;end end break;end if ((v317==(1600 -(393 + 1207))) or ((2174 -(53 + 65))>=(12243 -(12295 -4672)))) then local v366=0 -0 ;while true do if (((2920 + 2039)>=(2491 -(406 + 248))) and ((0 -0)==v366)) then v318=0 -0 ;v319=nil;v366=1;end if ((v366==(1 + 0)) or ((7438 -5577)==(11096 -(8453 -(132 + 374))))) then v317=2 -1 ;break;end end end end break;end if (((5948 -(2692 + 106))>2584) and (v316==(507 -(69 + 438)))) then v317=0 + (529 -(10 + 519)) ;v318=nil;v316=649 -(447 + 201) ;end end end break;end if (((8965 -5746)==((2655 + 672) -(77 + 31))) and (v175==0)) then local v289=0;while true do if (((3644 -1578)==(1985 + 81)) and (((1516 -(505 + 1010)) + 0)==v289)) then v175=2 -1 ;break;end if ((v289==0) or ((2694 -(659 + (1859 -1225)))>(3284 -(112 + 314)))) then v176=v95[5 -3 ];v177={};v289=700 -(26 + 673) ;end end end end break;end end else local v178=0 -0 ;local v179;while true do if ((v178==((817 + 418) -(643 + 592))) or (4717<=(2839 -(237 + 480)))) then v179=v95[2 + 0 ];v93[v179](v93[v179 + (1388 -(373 + 1014)) ]);break;end end end elseif ((v96<=(99 -79)) or ((5071 -((1908 -(1866 + 6)) + 1029))==(117 + 39 + 34))) then if ((v96<=((1245 -(756 + 488)) + 17)) or ((5534 -(255 + 607))<((1835 + 1440) -(897 + 963)))) then if ((v93[v95[1884 -(613 + 1269) ]]==v95[4]) or ((1875 -(86 + 210))<(2381 -1156))) then v72=v72 + 1 + 0 ;else v72=v95[2 + 1 ];end elseif (((1692 -(707 + 235))<(3002 -(278 + 1260))) and (v96>(19 + 0))) then local v181=0 + 0 ;local v182;local v183;local v184;local v185;local v186;while true do if ((((21441 -15204) -(1467 + 3))==(5699 -(695 + 237))) and (v181==(1912 -(1777 + 135)))) then v182=0 -0 ;v183=nil;v181=3 -2 ;end if (((1 + 1)==v181) or ((948 -588)>((6672 -(634 + 745)) -3005))) then v186=nil;while true do if (((10078 -6373)>=(4515 -(1073 + 157))) and (v182==(1 + 1))) then while true do if ((3717>=(3445 -1948)) and (v183==(2 -1))) then v186=(1690 + 72) -(523 + 1239) ;for v349=v184,v95[10 -6 ] do local v350=496 -(92 + 404) ;local v351;while true do if ((((1015 + 57) -(499 + 324))<=(10743 -6503)) and (v350==(889 -(765 + 54 + 70)))) then v351=0 + 0 ;while true do if (((5430 -3021)>=(246 + 1533)) and (0==v351)) then v186=v186 + 1 + 0 ;v93[v349]=v185[v186];break;end end break;end end end break;end if (((110 + 4859)>=(155 + 160)) and (v183==0)) then local v339=(0 -0) -0 ;local v340;while true do if ((4132>3155) and (v339==(1667 -(433 + 1234)))) then v340=0 + 0 ;while true do if (((40 + 625)<(5039 -3293)) and (v340==(197 -(150 + (85 -38))))) then v184=v95[(161 + 51) -(174 + 36) ];v185={v93[v184](v13(v93,v184 + (1864 -(826 + 1037)) ,v73))};v340=1 -0 ;end if ((v340==(1905 -(271 + 1633))) or ((1466 + 450)<=(1226 -(503 + 522)))) then v183=1 + 0 ;break;end end break;end end end end break;end if (((731 -(502 + (1999 -(1100 + 670))))==v182) or (3183<(2700 -1392))) then local v290=0 -0 ;while true do if (((2901 -1825)<=(1725 -(16 + 11))) and (v290==(0 -(0 + 0)))) then v183=0 -0 ;v184=nil;v290=3 -2 ;end if (((1189 -554)<=(16608 -12418)) and (v290==(1118 -(485 + 632)))) then v182=1853 -(153 + 1483 + 216) ;break;end end end if (((2006 + (901 -511))<=(5980 -(268 + 1702))) and (v182==1)) then v185=nil;v186=nil;v182=2 + 0 ;end end break;end if ((1502==(5998 -4496)) and (v181==1)) then v184=nil;v185=nil;v181=5 -3 ;end end else v93[v95[1 + 1 ]]=v93[v95[3 + 0 ]] + v95[3 + 1 ] ;end elseif ((((1689 -(379 + 163)) -(217 + (677 -446)))<=(5293 -(1189 + 46))) and (v96<=(1245 -(547 + 676)))) then if (((32 + 2736)==(2358 + 410)) and (v96==21)) then if ((v93[v95[1267 -(481 + 784) ]]<v95[3 + 1 ]) or (2617==(614 -(481 + 86)))) then v72=v72 + (690 -(635 + 54)) ;else v72=v95[3];end else v93[v95[1 + 1 ]][v95[1386 -(1005 + 378) ]]=v93[v95[2 + 2 ]];end elseif ((v96==(60 -(118 -81))) or ((1073 + 280)>(4037 -(109 + 803)))) then v93[v95[2 + 0 ]]=v93[v95[910 -(212 + 162 + 533) ]] + v93[v95[(1836 -(1501 + 329)) -2 ]] ;else local v191=0 + 0 ;local v192;local v193;local v194;while true do if ((v191==(0 + 0)) or ((2719 -(179 + 644))>(2222 + 1735))) then v192=v95[2];v193=v93[v192];v191=767 -(237 + 529) ;end if (((3829 -(93 + 845 + 750))<=((2040 -(774 + 401)) + 1735)) and (v191==(2 -1))) then v194=v93[v192 + (690 -(10 + 678)) ];if ((((6125 -(237 + 271)) -(1800 + 33 + 71))>=(4608 -(600 + 1310))) and (v194>0)) then if (((1208 -665)<=4751) and (v193>v93[v192 + (3 -2) ])) then v72=v95[462 -(18 + 5 + 436) ];else v93[v192 + ((39 -29) -7) ]=v193;end elseif ((((13635 -(210 + 66)) -10275)>=3034) and (v193<v93[v192 + (568 -(522 + 45)) ])) then v72=v95[236 -(19 + 214) ];else v93[v192 + 3 + 0 + 0 ]=v193;end break;end end end elseif (((6409 -2900)>(1022 + 886)) and (v96<=(74 -37))) then if (((192 + 136)<=(16961 -12780)) and (v96<=((54 + 19) -43))) then if ((v96<=(101 -74)) or ((5043 -(684 + 413))<(362 + 701 + 239))) then if ((v96<=(53 -28)) or ((3030 -(38 + 832))>(5653 -(250 + 1646)))) then local v135=1953 -(1564 + 389) ;local v136;while true do if ((v135==(0 -0)) or (384>4812)) then v136=v95[1316 -(504 + 810) ];v93[v136](v13(v93,v136 + (3 -2) ,v95[4 -1 ]));break;end end elseif ((v96==(24 + 2)) or (2582==(693 + 3221))) then for v236=v95[5 -3 ],v95[3 + 0 + 0 ] do v93[v236]=nil;end else local v195=0 + 0 ;local v196;local v197;local v198;while true do if (((5058 -3790)<=(13980 -9164)) and (v195==(0 -0))) then v196=0 + (875 -(456 + 419)) ;v197=nil;v195=(2 -1) + 0 ;end if (((3131 + 1423)>=1910) and (v195==(1 -0))) then v198=nil;while true do if ((v196==0) or ((124 + 3441)==2195)) then local v291=0;local v292;while true do if (((2144 -(36 + 24))>514) and ((0 -0)==v291)) then v292=0 + 0 ;while true do if (((1701 -(336 + 710))<(2083 + 1006 + 769)) and (v292==(1 -0))) then v196=1176 -(659 + 516) ;break;end if ((2716>=(697 + (2048 -1497))) and (v292==(974 -((744 -496) + 726)))) then v197=v95[5 -3 ];v198=v93[v95[6 -(898 -(138 + 757)) ]];v292=1 + 0 ;end end break;end end end if (((5009 -(1006 + 2 + 6))==3995) and (1==v196)) then v93[v197 + 1 ]=v198;v93[v197]=v198[v95[132 -(96 + 32) ]];break;end end break;end end end elseif ((4946>=902) and (v96<=28)) then if (v93[v95[2]] or ((4229 -(346 + 978))<(1877 + 18))) then v72=v72 + 1 ;else v72=v95[3];end elseif (((1398 -(277 + 238))<=((4558 + 521) -(10 + 340))) and (v96==(21 + 8))) then v93[v95[159 -(138 + 19) ]]=v93[v95[1 + (7 -5) ]][v93[v95[3 + 1 ]]];else local v202=0 + 0 ;local v203;local v204;local v205;while true do if (((0 + 0)==v202) or ((4749 -(1124 + 405))<=(1495 + 658))) then v203=1402 -(71 + 5 + 1326) ;v204=nil;v202=427 -(349 + 77) ;end if ((v202==(1107 -(636 + 470))) or ((12340 -7886)<((10714 -7038) -(217 + (1480 -(544 + 659)))))) then v205=nil;while true do if (((256 + 193)==(236 + 213)) and (v203==0)) then local v296=0 -0 ;while true do if (((5925 -(648 + 1099))>=1207) and (v296==(0 + 0))) then v204=v95[3];v205=v93[v204];v296=1 -0 ;end if (((2694 -1451)<=2757) and (v296==1)) then v203=1;break;end end end if ((1==v203) or ((3391 -(1068 + 433))>=4462)) then for v324=v204 + 1 + 0 ,v95[774 -(75 + 6 + 689) ] do v205=v205   .. v93[v324] ;end v93[v95[2]]=v205;break;end end break;end end end elseif ((4733>=((12403 -7164) -(551 + 1138))) and (v96<=(13 + 20))) then if (((950 + 287)<=(3897 -(683 + 20))) and (v96<=(133 -102))) then v93[v95[1 + 1 ]]=v93[v95[3]] * v93[v95[6 -(1 + 1) ]] ;elseif ((v96==(1644 -(1103 + 509))) or ((3442 -(4 + 70))<=2673)) then local v206=0 -0 ;local v207;local v208;while true do if (((4837 -3115)>((785 -329) + 199)) and (v206==0)) then v207=0 -0 ;v208=nil;v206=1947 -(1748 + 198) ;end if ((v206==1) or ((3383 -(699 + 485))<=(955 + 955))) then while true do if (((848 + 2824)>=(316 -(39 + 231))) and (v207==(0 + (1023 -(289 + 734))))) then v208=v95[3 -1 ];do return v13(v93,v208,v208 + v95[6 -3 ] );end break;end end break;end end else do return;end end elseif (((199 + 214)==(1487 -(390 + 684))) and (v96<=(2 + 33))) then if ((v96>34) or ((3321 -1931)>3246)) then local v209=0;local v210;local v211;while true do if (((14343 -9871)>=(378 + 44)) and (v209==(1 + 0))) then while true do if (((1176 -(499 + 677))==v210) or ((662 -(307 + 7 + 34))==(4016 -(577 + 284)))) then local v299=1210 -(930 + 280) ;while true do if (((545 -391)<(1299 + 219 + 59)) and (v299==0)) then v211=v95[(942 -(416 + 524)) + (0 -0) ];v73=(v211 + v94) -(2 -1) ;v299=1;end if (((986 -(312 + 673))==v299) or (1903>=(1631 + 1484))) then v210=1 + 0 ;break;end end end if (((1167 + 496)<=(6745 -2995)) and (v210==(1 + 0))) then for v325=v211,v73 do local v326=0;local v327;local v328;while true do if (((3 -2)==v326) or (3200<(2102 -(136 + 268 + 59)))) then while true do if (((5704 -(322 + 657))==(5861 -((2038 -1238) + 336))) and ((0 -0)==v327)) then v328=v91[v325-v211 ];v93[v325]=v328;break;end end break;end if ((v326==(0 + 0 + 0)) or (2206<(1278 -(5 + 841)))) then v327=0 -0 ;v328=nil;v326=759 -(124 + 634) ;end end end break;end end break;end if ((((0 -0) -0)==v209) or ((2928 -1794)==(2084 + 2223))) then local v260=1873 -(1856 + 17) ;while true do if (((6168 -3952)<=((16502 -9478) -2138)) and (v260==(0 + 0))) then v210=0;v211=nil;v260=1 + (0 -0) ;end if (((271 + 57)<=((7651 -4009) -(296 + 4))) and ((2 -1)==v260)) then v209=1197 -(586 + 610) ;break;end end end end else v93[v95[2]]=v29(v88[v95[3]],nil,v37);end elseif (((563 + 1137)<=(5244 -(5308 -(1769 + 204)))) and (v96==((3054 -(906 + 1033)) -(616 + 463)))) then v36[v95[7 -4 ]]=v93[v95[2]];elseif (((5817 -(775 + (1176 -(242 + 50))))>=(3262 -(114 + 520))) and (v95[239 -(121 + 116) ]==v93[v95[3 + 0 + (1 -0) ]])) then v72=v72 + (1968 -(1743 + 224)) ;else v72=v95[1 + 2 ];end elseif (((5115 -(10 + 235))>=4854) and (v96<=(20 + (169 -(80 + 66))))) then if ((v96<=(92 -(1232 -(963 + 217)))) or ((13627 -9869)<=(2683 -(291 + 661)))) then if ((v96<=(61 -23)) or ((1536 + 2433)<((1131 -(269 + 743)) + 459))) then local v138=408 -(283 + 125) ;local v139;local v140;local v141;local v142;while true do if ((v138==1) or ((9742 -7284)<(2783 -(346 + 548)))) then v141=nil;v142=nil;v138=1 + 1 ;end if (((11103 -8234)==(13026 -10157)) and ((1 + 1)==v138)) then while true do if ((v139==((0 -0) -0)) or ((1754 + 1335 + 684)<(2426 -(457 + 963)))) then v140=v88[v95[12 -9 ]];v141=nil;v139=1 + (596 -(377 + 219)) ;end if ((v139==1) or (((203 -151) + 1793)<=(1671 -(842 + 507)))) then v142={};v141=v10({},{__index=function(v275,v276)local v300=0 + 0 + 0 ;local v301;local v302;while true do if ((1555<=3324) and (v300==(1144 -(332 + 812)))) then v301=866 -(577 + 289) ;v302=nil;v300=1796 -(1630 + 165) ;end if ((v300==1) or (4126==315)) then while true do if (((2789 -(29 + 228))>(5043 -3690)) and ((0 -0)==v301)) then v302=v142[v276];return v302[1 + 0 ][v302[2]];end end break;end end end,__newindex=function(v277,v278,v279)local v303=1404 -(623 + 781) ;local v304;local v305;local v306;while true do if ((1786<=(1838 + 1970)) and (v303==(0 + 0))) then v304=(0 -0) -0 ;v305=nil;v303=1935 -(1516 + 418) ;end if ((v303==(1 -0)) or (((9647 -(168 + 1255)) -3238)<(401 + 408))) then v306=nil;while true do if ((v304==(2 -1)) or ((555 -303)>3042)) then while true do if ((v305==0) or (4731<(2842 -1151))) then v306=v142[v278];v306[1 + 0 ][v306[2]]=v279;break;end end break;end if ((4580>((1477 -678) + 540)) and (v304==(0 -0))) then local v361=0;while true do if (((5105 -(316 + 83))>(4484 + 78)) and (v361==(1 + 0))) then v304=1;break;end if (((18 + 706)<=(4601 -((661 -(290 + 339)) + 15))) and (0==v361)) then v305=0;v306=nil;v361=1647 -(1514 + 132) ;end end end end break;end end end});v139=2;end if (((998 -(415 + 581))==v139) or (4896==(1901 + (1768 -1165)))) then for v280=3 -2 ,v95[14 -10 ] do local v281=0 + 0 ;local v282;local v283;while true do if ((v281==(1412 -(69 + 1342))) or ((1671 + 1197)==1480)) then while true do if ((v282==((946 -399) -(70 + 477))) or ((2872 -(865 + 238))==(712 + 1650))) then local v354=0 + 0 ;local v355;while true do if ((4378<=(5185 -(151 + 257 + 137))) and (v354==(0 -0))) then v355=0;while true do if (((686 + (1546 -(763 + 299)))<(6767 -(3348 + 1526))) and ((1238 -(343 + 895))==v355)) then v72=v72 + 1 ;v283=v87[v72];v355=1285 -(679 + 605) ;end if (((21 -7)<=(5473 -(1445 + 9 + 34))) and (1==v355)) then v282=944 -(122 + 821) ;break;end end break;end end end if ((3837==(4624 -(544 + 243))) and (v282==(1 -0))) then if (((3832 -(286 + 923))==(5871 -3248)) and (v283[1]==41)) then v142[v280-1 ]={v93,v283[2 + 1 ]};else v142[v280-1 ]={v36,v283[3]};end v92[ #v92 + (1 -0) ]=v142;break;end end break;end if ((v281==((0 -0) + 0)) or ((1085 + 3002)<=(5338 -4005))) then v282=0 + 0 ;v283=nil;v281=1 + 0 ;end end end v93[v95[8 -6 ]]=v29(v140,v141,v37);break;end end break;end if (((0 + 0)==v138) or (4708==(251 + 758))) then v139=0 -0 ;v140=nil;v138=1 + 0 ;end end elseif ((v96>(102 -63)) or ((65 + 861)<=(383 + 287))) then if (((2745 -(156 + 172))>=(682 + 146)) and (v93[v95[2 -(0 -0) ]]==v93[v95[2 + 2 ]])) then v72=v72 + (465 -(459 + 5)) ;else v72=v95[241 -(93 + 145) ];end elseif ((v93[v95[5 -3 ]]~=v95[226 -(167 + 55) ]) or ((8076 -5480)==(1199 -(993 + 94)))) then v72=v72 + 1 + 0 ;else v72=v95[6 -3 ];end elseif ((v96<=(22 + 19)) or ((6509 -(1570 + 381))<=(10919 -8662))) then v93[v95[1 + 1 ]]=v93[v95[3]];elseif ((v96>(416 -((526 -304) + 78 + 74))) or ((377 -(4 + 63))<83)) then v93[v95[(986 -(427 + 554)) -(3 + 0) ]]=v93[v95[3]][v95[1 + 0 + 3 ]];else v93[v95[4 -2 ]]=v95[1046 -(299 + 744) ];end elseif (((1797 -(93 + 748))==(2325 -(618 + 751))) and (v96<=46)) then if ((v96<=((2584 -(249 + 1017)) -(189 + 1085))) or (2815>=(4535 -(470 + 1061)))) then v93[v95[3 -(610 -(355 + 254)) ]]=v36[v95[7 -4 ]];elseif (((8233 -5991)>=(2105 -(367 + 5 + 87 + 172))) and (v96==(1297 -(749 + 503)))) then local v219=v95[(2 -0) -0 ];local v220=v95[4 + 0 ];local v221=v219 + 1 + 1 ;local v222={v93[v219](v93[v219 + 1 ],v93[v221])};for v238=1 -0 ,v220 do v93[v221 + v238 ]=v222[v238];end local v223=v222[2 -1 ];if (v223 or ((1794 + 643)>=(3625 -779))) then local v251=0 -(0 -0) ;while true do if ((v251==(0 -(1733 -(389 + 1344)))) or (((792 + 3256) -1154)==(2022 + 392))) then v93[v221]=v223;v72=v95[4 -1 ];break;end end else v72=v72 + (1 -0) ;end else local v224=804 -(23 + 781) ;local v225;local v226;while true do if (((1 -0)==v224) or ((3465 -(45 + 174))>=(4281 -(190 + 69)))) then for v269=v225 + (210 -(82 + 3 + 124)) ,v73 do v7(v226,v93[v269]);end break;end if ((1479>=(303 -(54 + (1535 -(790 + 607))))) and (0==v224)) then v225=v95[1701 -(494 + 1205) ];v226=v93[v225];v224=1 -(0 + 0) ;end end end elseif ((((16145 -(350 + 570)) -11332)<=(145 + 4459)) and (v96<=(34 + 14))) then if ((4519>(3465 -(638 + 626))) and (v96==47)) then v93[v95[2]]=v37[v95[2 + 1 ]];elseif (((2505 -(496 + 1018))<=(1965 + 1)) and (v93[v95[2 -0 ]]<v93[v95[9 -5 ]])) then v72=v72 + 1 + 0 ;else v72=v95[2 + 1 ];end elseif ((v96>(22 + 19 + 8)) or ((1562 -(99 + 450))==(109 + 3120))) then do return v93[v95[2]];end else v93[v95[2 + 0 ]]={};end v72=v72 + 1 ;break;end end break;end end end end v71=3;end end end;end return v29(v28(),{},v17)(...);end vv9(),...);end
